#!/bin/bash
#
#
# automaçao DNS 
# Ruan Cesar 
#
#
#

#dns
pastaDN="/etc/bind"
arq="named.conf.default-zones"



menuDNS(){
    xDN="continuar"
    while [ "$xDN" == "continuar" ];
    do
        echo "------------------------------------DNS-------------------------------"
        echo "[ 1. instalar ]"
        echo ""
        echo "[ 2. desinstalar ]"
        echo ""
        echo "[ 3. iniciar ]"
        echo ""
        echo "[ 4. parar ]"
        echo ""
        echo "[ 5. Criar ]" 
        echo ""
        echo "[ 6. editar ]"
        echo ""
        echo "[ 7. excluir ]"
        echo ""
        echo "[ 8. informações ]"
        echo ""
        echo "[ 9. sair ]"
        echo ""
        echo "selecione a opção"
        read opn
        echo "------------------------------------------------------------------------"
            case "$opn" in
                1)
                    if [ comand -v bind9 &>/dev/null ]; then
                        echo " o programa ja esta instalado "
                        echo "voltando para o menu"
                        sleep 2
                        menu
                    else
                        echo " instalando o DNS "
                        sleep 2
                    fi

                    #instalando o programa
                    apt-get install bind9 -y
                    sleep 4
                    echo "instalado com sucesso"
                    ;;
                2)
                    if [ ! comand -v bind9 &>/dev/null ]; then
                        echo " o programa nao esta instalado "
                        echo "voltando para o menu"
                        sleep 2
                        menu
                    else
                        echo " desinstalando o DNS "
                        apt-get remove bind9
                        sleep 2
                    fi
                    ;;
                3)
                    echo "iniciando DNS"
                    sleep 2
                    systemctl start bind9
                    ;;
                4)
                    echo "parando DNS"
                    sleep 2
                    systemctl stop bind9
                    ;;
                5)
                    echo "pfv responda as perguntas abaixo"
                    sleep 2
                    CHDNS
                    ;;
                6)
                    echo "abrindo modificaçoes"
                    sleep 2
                    mod
                    ;;
                7)
                    echo "vamos remover"
                    sleep 2
                    del
                    ;;
                8)
                    echo " responda a pergunta abaixo"
                    sleep 2
                    mini
                    ;;
                9)
                    echo "saindo......"
                    sleep 2
                    xDN="batata"
                    ;;
                
                *)
                    echo "opçao invalida"
                    sleep 2
                    ;;
            esac
    done
}


DNS(){

    echo "qual é o dominio do seu site? (sem www ) (com .com/.local)"
    read site
    echo "qual o dominio do seu site sem o (.com/.local) e (sem www )"
    read site1
    echo "qual é o ip do servidor web?"
    read web

    #Primeiro Arquivo

    echo zone \"$site\"\ { >> $pastaDN/$arq
    echo "      type master;" >> $pastaDN/$arq
    echo        file \"$pastaDN/db.$site\"\; >> $pastaDN/$arq
    echo "};" >> $pastaDN/$arq

    #Segundo arquivo 

    touch $pastaDN/db.$site
    echo "; BIND reverse data file for empty rfc1918 zone" >> $pastaDN/db.$site
    echo ";" >> $pastaDN/db.$site
    echo "; DO NOT EDIT THIS FILE - it is used for multiple zones." >> $pastaDN/db.$site
    echo "; Instead, copy it, edit named.conf, and use that copy." >> $pastaDN/db.$site
    echo ";" >> $pastaDN/db.$site
    echo '$TTL	86400' >> $pastaDN/db.$site
    echo "@	IN	SOA	ns1.$site. root.$site. (" >> $pastaDN/db.$site
    echo "			      1		; Serial" >> $pastaDN/db.$site
    echo "			 604800		; Refresh" >> $pastaDN/db.$site
    echo "			  86400		; Retry" >> $pastaDN/db.$site
    echo "			2419200		; Expire" >> $pastaDN/db.$site
    echo "			  86400 )	; Negative Cache TTL" >> $pastaDN/db.$site
    echo ";" >> $pastaDN/db.$site
    echo "@	    IN	NS  ns1.$site1.local." >> $pastaDN/db.$site
    echo "ns1   IN  A   $web" >> $pastaDN/db.$site
    echo "www   IN  A   $web" >> $pastaDN/db.$site
    systemctl restart bind9
}

mod(){
    
        echo "------------------------------------Modificar-------------------------------"
        echo "1. dominio"
        echo ""
        echo "2. ip do servidor web"
        echo ""
        echo "3. tudo"
        echo ""
        echo "echolha uma das opções"
        read opn3
        echo "------------------------------------------------------------------------------"
    case "$opn3" in
    
        1)
            echo " qual é o dominio do seu site (antigo)? (sem www ) (com .com/.local)"
            read sitee
            echo "qual o dominio do seu site (antigo) sem o (.com/.local) e (sem www )"
            read sitee2
            echo "qual é o dominio do seu site? (NOVO) (sem www ) (com .com/.local)"
            read site
            echo "qual o dominio do seu site (NOVO) sem o (.com/.local) e (sem www )"
            read site1
    

            
            if grep -q "$sitee" $pastaDN/$arq; then
               
                sed -i "s/$sitee/$site/g" $pastaDN/$arq
                echo "Informação modificada com sucesso."
            else
                echo "error ao modificar o named.conf.default-zones "
            fi

            mv $pastaDN/db.$sitee $pastaDN/db.$site
        
            
            if grep -q "$sitee2" $pastaDN/db.$site; then
                
                sed -i "s/$sitee2/$site1/g" $pastaDN/db.$site
                
                echo "Informação modificada com sucesso (1/2)."
            else
                echo "error ao modificar o db.$site  "
            fi
         
            ;;
        2)
            echo "qual é o dominio do site com (.com/.local)"
            read site
            echo "qual é o ip do servidor web (antigo)?"
            read webb
            echo "qual é o ip do servidor web (novo)?"
            read webb1
            if grep -q "$webb" $pastaDN/db.$site; then
                sed -i "s/$webb/$webb1/g" $pastaDN/db.$site
                echo "Informação modificada com sucesso."
            else
                echo "error ao modificar o db.$site "
            fi
            ;;
        3)
            echo " qual é o dominio do seu site (antigo)? (sem www ) (com .com/.local)"
            read sitee
            echo "qual o dominio do seu site (antigo) sem o (.com/.local) e (sem www )"
            read sitee2
            echo "qual é o ip do servidor web (antigo)?"
            read webb
            echo "qual é o dominio do seu site? (NOVO) (sem www ) (com .com/.local)"
            read site
            echo "qual o dominio do seu site (NOVO) sem o (.com/.local) e (sem www )"
            read site1
            echo "qual é o ip do servidor web (novo)?"
            read webb1
    

            
            if grep -q "$sitee" $pastaDN/$arq; then
                
                sed -i "s/$sitee/$site/g" $pastaDN/$arq
                echo "Informação modificada com sucesso."
            else
                echo "error ao modificar o named.conf.default-zones "
            fi

            mv $pastaDN/db.$sitee $pastaDN/db.$site
        
            
            if grep -q "$sitee2" $pastaDN/db.$site; then
                
                sed -i "s/$sitee2/$site1/g" $pastaDN/db.$site
                
                echo "Informação modificada com sucesso (1/2)."
            else
                echo "error ao modificar o db.$site  "
            fi
           
            if grep -q "$webb" $pastaDN/db.$site; then
                sed -i "s/$webb/$webb1/g" $pastaDN/db.$site
                echo "Informação modificada com sucesso. (2/2)"
            else
                echo "error ao modificar o db.$site "
            fi
            ;;
        *)
            echo "opçao invalida"
            ;;
    
    esac


}

del(){
        echo "qual é o dominio do site PARA REMOÇÃO com (.com/.local) (sem www) "
        read sit


        sed -i "/zone \"$sit\" {/,/};/d" $pastaDN/$arq
        rm -f $pasta/db.$sit

}


CHDNS(){
    echo "------------------------------------CRIAÇAO-DE-DOMINIO-------------------------------"
            echo "[1 - criar dominio unico ]"
            echo ""
            echo "[2 - importar de uma lista ]"
            echo ""
            echo "escolha as opções"
            read opDNSUS
        case "$opDNSUS" in
            1)
                echo "configurando usuario unico"
                DNS
                ;;
            2)
                echo "importando de uma lista"
                listDNS  
                ;;
        esac

}

listDNS(){

    echo "insira o local da lista de usuarios"
    read arquivolistDNS
    echo "Ip do servidor WEB:* "
    read IPweb
    
    arquivo_usuarios="$arquivolistDNS"
        while IFS=":" read -r nome ; do
            # Remover espaços em branco no início e no final do nome
            nome_sem_espacos=$(echo "$nome" | sed 's/^[ \t]*//;s/[ \t]*$//')

            # Substituir espaços por "_"
            nome_formatado=$(echo "$nome_sem_espacos" | sed 's/ //g')

            # Remover acentos e caracteres especiais
            nome_limpo=$(echo "$nome_formatado" | iconv -f utf-8 -t ascii//TRANSLIT | tr -cd '[:alnum:]_')

            # Garanta que o nome_formatado não está vazio
            if [ -z "$nome_limpo" ]; then
                echo "Nome formatado está vazio. Ignorando."
                continue
            fi

            arquivoDB="log$nome_limpo.sp.br"
            arquivoDB1="log$nome_limpo"

                #Primeiro Arquivo

                echo zone \"$arquivoDB\"\ { >> $pastaDN/$arq
                echo "      type master;" >> $pastaDN/$arq
                echo        file \"$pastaDN/db.$arquivoDB\"\; >> $pastaDN/$arq
                echo "};" >> $pastaDN/$arq
                echo "" >> $pastaDN/$arq
                echo "#  Feito por Ruan Cesar e Mylena Torquato" >> $pastaDN/$arq
                echo "" >> $pastaDN/$arq

                #Segundo arquivo 

                touch $pastaDN/db.$arquivoDB


                echo "; BIND reverse data file for empty rfc1918 zone" >> $pastaDN/db.$arquivoDB
                echo ";" >> $pastaDN/db.$arquivoDB
                echo "; DO NOT EDIT THIS FILE - it is used for multiple zones." >> $pastaDN/db.$arquivoDB
                echo "; Instead, copy it, edit named.conf, and use that copy." >> $pastaDN/db.$arquivoDB
                echo ";" >> $pastaDN/db.$arquivoDB
                echo '$TTL	86400' >> $pastaDN/db.$arquivoDB
                echo "@	IN	SOA	ns1.$arquivoDB. root.$arquivoDB. (" >> $pastaDN/db.$arquivoDB
                echo "			      1		; Serial" >> $pastaDN/db.$arquivoDB
                echo "			 604800		; Refresh" >> $pastaDN/db.$arquivoDB
                echo "			  86400		; Retry" >> $pastaDN/db.$arquivoDB
                echo "			2419200		; Expire" >> $pastaDN/db.$arquivoDB
                echo "			  86400 )	; Negative Cache TTL" >> $pastaDN/db.$arquivoDB
                echo ";" >> $pastaDN/db.$arquivoDB
                echo "@	    IN	NS  ns1.$arquivoDB1.local." >> $pastaDN/db.$arquivoDB
                echo "ns1   IN  A   $IPweb" >> $pastaDN/db.$arquivoDB
                echo "www   IN  A   $IPweb" >> $pastaDN/db.$arquivoDB
                




        done < "$arquivo_usuarios"


        systemctl restart bind9
       
       
}





menuDNS